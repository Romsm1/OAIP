class Disassembler:
    def __init__(self):
        pass

    def disassemble(self, item):
        """Разборка предмета на материал."""
        if isinstance(item, Sword):
            material_name = item.get_material_name()
            return Material(material_name)

        elif isinstance(item, Pickaxe):
            material_name = item.get_material_name()
            return Material(material_name)

        else:
            raise ValueError("Недопустимый тип предмета!")

    def __add__(self, other):
        """Переопределение оператора сложения."""
        if isinstance(other, (Sword, Pickaxe)):
            return self.disassemble(other)
        raise ValueError("Используйте формат: disassembler + item")


# Главный цикл программы
forge = Forge()
anvil = Anvil()
disassembler = Disassembler()

materials = {
    "Дерево": Wood(),
    "Камень": Stone(),
    "Железо": Iron(),
    "Алмаз": Diamond()
}

while True:
    item_type = input("Создать меч или кирку? (Меч/Кирка/Выход): ").strip().capitalize()
    if item_type == "Выход":
        break

    material_name = input("Выберите материал (Дерево, Камень, Железо, Алмаз): ").strip().capitalize()
    if material_name not in materials:
        print("Неверный материал!")
        continue

    stick_count = int(input("Введите количество палок: "))
    material_count = int(input(f"Введите количество {material_name}: "))

    material = materials.get(material_name)

    if item_type == "Меч":
        item = forge.craft_sword(stick_count, material_count, material)
    elif item_type == "Кирка":
        item = forge.craft_pickaxe(stick_count, material_count, material)
    else:
        print("Неверный выбор!")
        continue

    if isinstance(item, str):
        print(item)
    else:
        enchant = input("Хотите зачаровать? (Да/Нет): ").strip().lower()
        if enchant == "да":
            if isinstance(item, Sword):
                enchanted_item = EnchantedSword(
                    item.get_material_name(),
                    item.get_durability(),
                    item.get_damage()
                )
            elif isinstance(item, Pickaxe):
                enchanted_item = EnchantedPickaxe(
                    item.get_material_name(),
                    item.get_durability(),
                    item.get_efficiency()
                )
            print(enchanted_item.info())
        else:
            print(item.info())

        # Улучшение предмета на наковальне
        upgrade_choice = input("Хотите улучшить предмет на наковальне? (Да/Нет): ").strip().lower()
        if upgrade_choice == "да":
            upgrade_material_name = input("Выберите материал для улучшения (Дерево, Камень, Железо, Алмаз): ").strip().capitalize()
            if upgrade_material_name not in materials:
                print("Неверный материал!")
                continue

            upgrade_material = materials.get(upgrade_material_name)
            upgraded_item = anvil + (item, upgrade_material)
            print("Предмет улучшен!")
            print(upgraded_item.info())

        # Разборка предмета
        disassemble_choice = input("Хотите разобрать предмет? (Да/Нет): ").strip().lower()
        if disassemble_choice == "
